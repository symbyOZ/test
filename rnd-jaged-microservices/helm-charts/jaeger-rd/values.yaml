dataservice:
  imageName: "jaeger-rd-dataservice"
  replicaCount: 1
  listenPort: "4000"
  db:
    host: "db"
    port: 3306
    user: "blog"
    password: "p@$$w0rd"
    name: "blogdb"
  service:
    type: ClusterIP
    port: 4000
  resources: {}

loadbalancer:
  imageName: "jaeger-rd-loadbalancer"
  replicaCount: 1
  port: 2001
  service:
    type: ClusterIP
    port: 2001
  resources: {}

logservice:
  imageName: "jaeger-rd-logservice"
  replicaCount: 1
  port: 6000
  service:
    type: ClusterIP
    port: 6000
  resources: {}

web:
  imageName: "jaeger-rd-web"
  replicaCount: 1
  port: 3000
  service:
    type: ClusterIP
    port: 3000
  resources: {}

image:
  repositoryBase: 589295909756.dkr.ecr.us-east-2.amazonaws.com
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

cacheservice:
  host: ""
  port: "3000"

jaeger:
  samplerType: "const"
  samplerParam: "1"
  samplerManagerHostPort: "jaeger-agent:5778"
  reporterLogSpans: "true"
  agentHost: "jaeger-agent"
  agentPort:: "6831"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

nodeSelector: {}

tolerations: []

affinity: {}

mysql:
  enabled: false
  # Other values for bitnami/mysql chart can be checked here: https://hub.helm.sh/charts/bitnami/mysql
