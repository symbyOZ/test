{{/* vim: set filetype=helm: */}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "jaeger-rd.fullname" . }}-web
  labels:
    {{- include "jaeger-rd.web.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.web.replicaCount }}
  selector:
    matchLabels:
      {{- include "jaeger-rd.web.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "jaeger-rd.web.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "jaeger-rd.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-web
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repositoryBase }}/{{ .Values.web.imageName }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.web.port }}
              protocol: TCP
          env:
            - name: JAEGER_SAMPLER_TYPE
              value: "{{ .Values.jaeger.samplerType }}"
            - name: JAEGER_SAMPLER_PARAM
              value: "{{ .Values.jaeger.samplerParam }}"
            - name: JAEGER_SAMPLER_MANAGER_HOST_PORT
              value: "{{ .Values.jaeger.samplerManagerHostPort }}"
            - name: JAEGER_REPORTER_LOG_SPANS
              value: "{{ .Values.jaeger.reporterLogSpans }}"
            - name: JAEGER_AGENT_HOST
              value: "{{ .Values.jaeger.agentHost }}"
            - name: JAEGER_AGENT_PORT
              value: "{{ .Values.jaeger.agentPort }}"
            - name: PORT
              value: "{{ .Values.web.port }}"
          args:
            - "-loadbalancer"
            - "http://{{ include "jaeger-rd.fullname" . }}-loadbalancer:{{ .Values.loadbalancer.port }}"
            - "-dataservice"
            - "http://{{ include "jaeger-rd.fullname" . }}-dataservice:{{ .Values.dataservice.listenPort }}"
            - "-cacheservice"
            - "http://{{ .Values.cacheservice.host }}:{{ .Values.cacheservice.port }}"
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: http
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: http
          resources:
            {{- toYaml .Values.web.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
